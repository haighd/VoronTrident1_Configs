#####################################################################
#   Probe and Resonance
#####################################################################
[mcu scanner]
serial: /dev/serial/by-id/usb-Cartographer_614e_240002800443565633393720-if00

# [mcu btt_adxl345]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128931E58-if00

# [adxl345 btt]
# cs_pin: btt_adxl345:gpio9
# #spi_bus: spi1a
# spi_software_sclk_pin: btt_adxl345:gpio10
# spi_software_mosi_pin: btt_adxl345:gpio11
# spi_software_miso_pin: btt_adxl345:gpio8
# # axes_map: -x,-y,-z

[scanner]
mcu: scanner            
x_offset: 0                          
y_offset: -23                         
backlash_comp: 0.00944
sensor: cartographer
sensor_alt: carto    
mesh_runs: 2

[bed_mesh]
zero_reference_position: 175, 175    
speed: 100
horizontal_move_z: 5
mesh_min: 25, 0 #25, 25
mesh_max: 325, 300 #325, 285
probe_count: 50, 50
algorithm: bicubic

[temperature_sensor Cartographer_MCU]
sensor_type: temperature_mcu
sensor_mcu: scanner
min_temp: 0
max_temp: 105

[adxl345 nozzle]
cs_pin: scanner:PA3
spi_bus: spi1
axes_map: x,-y,-z

[adxl345 toolhead]
cs_pin: nhk:gpio27
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19
axes_map: -x, -z, -y

[resonance_tester]
accel_chips: adxl345 nozzle, adxl345 toolhead
#accel_chip: adxl345 nozzle
probe_points: 175, 175, 3
# probe_points:
#    175, 175, 3
#    50, 50, 3
#    300, 50, 3
#    300, 275, 3
#    50, 275, 3

[safe_z_home]
home_xy_position: 175, 175
z_hop: 10

####################
#   Shake n Tune   #
####################

[input_shaper]
shaper_freq_x: 67.0 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 67.8 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: 0.046 # damping ratio for the X axis
damping_ratio_y: 0.044 # damping ratio for the Y axis

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.